package com.example.najen.dapath.gamemodes;

import android.graphics.Paint;
import android.graphics.Paint.Cap;
import android.graphics.Paint.Style;
import android.support.v4.view.ViewCompat;
import com.example.najen.dapath.Main;
//import com.google.android.gms.cast.TextTrackStyle;
//import com.google.android.gms.maps.model.BitmapDescriptorFactory;

public class ModeProfile {
    public static final int MODE_DACLASSIC = 1;
    public static final int MODE_DAGETFAST = 2;
    public static final int MODE_LECRAYCRAY = 3;
    public static final int MODE_MENU = 0;
    public static final int MODE_MOARFAIL = 4;
    public float AccelerationX;
    public float AccelerationY;
    public float AppBarMax;
    public float AppGrowthRate;
    public boolean ApplierBar;
    public int BackColor;
    public int BasePathType;
    public boolean Collideable;
    public boolean DaBomb;
    public float DaBombChance;
    public float DaBombMult;
    public int DaBombPathGens;
    public float DaBombSlowTime;
    public float DaBombTimeMult;
    public float DaBombTransTime;
    public boolean DaBombUnlocked;
    public boolean DaFattening;
    public float DaFatteningChance;
    public float DaFatteningDuration;
    public float DaFatteningMult;
    public float DaFatteningTransTime;
    public boolean DaFatteningUnlocked;
    public boolean DaFlip;
    public float DaFlipChance;
    public float DaFlipDuration;
    public float DaFlipMult;
    public float DaFlipTransTime;
    public boolean DaFlipUnlocked;
    public boolean DaMaths;
    public float DaMathsChance;
    public float DaMathsDuration;
    public float DaMathsMultBar;
    public float DaMathsMultiplier;
    public boolean DaMathsUnlocked;
    public boolean DaSupaSlow;
    public float DaSupaSlowChance;
    public float DaSupaSlowDuration;
    public float DaSupaSlowTimeMult;
    public float DaSupaSlowTransTime;
    public boolean DaSupaSlowUnlocked;
    public float EpsilonRadius;
    public Paint ExplosionPaint;
    public Paint FusePaint;
    public float Height;
    public Paint IconFillPaint;
    public Paint IconMaskPaint;
    public int InitMultiplier;
    public float InitScoreMult;
    public float InitTimeMult;
    public float InitialVelX;
    public float InitialVelY;
    boolean LiftFail;
    public boolean MultBar;
    public float MultBarMax;
    public float MultDecayRate;
    public float MultGrowthRate;
    public int MultiplierMax;
    public double PUpBreakTime;
    public int PathColor;
    public Paint PathPaint;
    public float PathRadius;
    public boolean PauseBar;
    public boolean PauseOnStart;
    public boolean PowerUps;
    public float RelHeight;
    public boolean ScoreBar;
    public Paint ShockwavePaint;
    public float SqEpsilonRadius;
    public boolean Started;
    public float TouchRadius;
    public float VelocityX;
    public float VelocityY;
    public float Width;
    public int applierFlashDur;
    public int scorebarFlashDur;
    public float xPos;
    public float yPos;

    public ModeProfile(ModeProfile profile) {
        this.DaBombUnlocked = profile.DaBombUnlocked;
        this.DaFlipUnlocked = profile.DaFlipUnlocked;
        this.DaFatteningUnlocked = profile.DaFatteningUnlocked;
        this.DaSupaSlowUnlocked = profile.DaSupaSlowUnlocked;
        this.DaMathsUnlocked = profile.DaMathsUnlocked;
        this.PauseOnStart = profile.PauseOnStart;
        this.Started = profile.Started;
        this.PauseBar = profile.PauseBar;
        this.xPos = profile.xPos;
        this.yPos = profile.yPos;
        this.PowerUps = profile.PowerUps;
        this.DaBomb = profile.DaBomb;
        this.DaFlip = profile.DaFlip;
        this.DaFattening = profile.DaFattening;
        this.DaSupaSlow = profile.DaSupaSlow;
        this.DaMaths = profile.DaMaths;
        this.Collideable = profile.Collideable;
        this.MultBar = profile.MultBar;
        this.ApplierBar = profile.ApplierBar;
        this.ScoreBar = profile.ScoreBar;
        this.DaFlipChance = profile.DaFlipChance;
        this.DaFlipMult = profile.DaFlipMult;
        this.DaFlipDuration = profile.DaFlipDuration;
        this.DaFlipTransTime = profile.DaFlipTransTime;
        this.DaBombChance = profile.DaBombChance;
        this.DaBombMult = profile.DaBombMult;
        this.DaBombPathGens = profile.DaBombPathGens;
        this.DaBombTimeMult = profile.DaBombTimeMult;
        this.DaBombSlowTime = profile.DaBombSlowTime;
        this.DaBombTransTime = profile.DaBombTransTime;
        if (profile.FusePaint != null) {
            this.FusePaint = new Paint(profile.FusePaint);
        }
        this.DaSupaSlowChance = profile.DaSupaSlowChance;
        this.DaSupaSlowTransTime = profile.DaSupaSlowTransTime;
        this.DaSupaSlowDuration = profile.DaSupaSlowDuration;
        this.DaSupaSlowTimeMult = profile.DaSupaSlowTimeMult;
        this.DaMathsChance = profile.DaMathsChance;
        this.DaMathsDuration = profile.DaMathsDuration;
        this.DaMathsMultBar = profile.DaMathsMultBar;
        this.DaMathsMultiplier = profile.DaMathsMultiplier;
        this.DaFatteningChance = profile.DaFatteningChance;
        this.DaFatteningTransTime = profile.DaFatteningTransTime;
        this.DaFatteningDuration = profile.DaFatteningDuration;
        this.DaFatteningMult = profile.DaFatteningMult;
        this.BasePathType = profile.BasePathType;
        this.Width = profile.Width;
        this.Height = profile.Height;
        this.RelHeight = profile.RelHeight;
        this.PathRadius = profile.PathRadius;
        this.PathPaint = new Paint(profile.PathPaint);
        if (profile.IconFillPaint != null) {
            this.IconFillPaint = new Paint(profile.IconFillPaint);
        }
        if (profile.IconMaskPaint != null) {
            this.IconMaskPaint = new Paint(profile.IconMaskPaint);
        }
        if (profile.ExplosionPaint != null) {
            this.ExplosionPaint = new Paint(profile.ExplosionPaint);
        }
        if (profile.ShockwavePaint != null) {
            this.ShockwavePaint = new Paint(profile.ShockwavePaint);
        }
        this.InitialVelX = profile.InitialVelX;
        this.VelocityX = profile.VelocityX;
        this.AccelerationX = profile.AccelerationX;
        this.AccelerationY = profile.AccelerationY;
        this.InitialVelY = profile.InitialVelY;
        this.VelocityY = profile.VelocityY;
        this.TouchRadius = profile.TouchRadius;
        this.EpsilonRadius = profile.EpsilonRadius;
        this.SqEpsilonRadius = profile.SqEpsilonRadius;
        this.MultBarMax = profile.MultBarMax;
        this.AppBarMax = profile.AppBarMax;
        this.InitTimeMult = profile.InitTimeMult;
        this.InitScoreMult = profile.InitScoreMult;
        this.InitMultiplier = profile.InitMultiplier;
        this.MultiplierMax = profile.MultiplierMax;
        this.MultGrowthRate = profile.MultGrowthRate;
        this.MultDecayRate = profile.MultDecayRate;
        this.AppGrowthRate = profile.AppGrowthRate;
        this.PUpBreakTime = profile.PUpBreakTime;
        this.PathColor = profile.PathColor;
        this.BackColor = profile.BackColor;
        this.LiftFail = profile.LiftFail;
        this.scorebarFlashDur = profile.scorebarFlashDur;
        this.applierFlashDur = profile.applierFlashDur;
    }

    public ModeProfile(int gameMode, int x, int y, int width, int height) {
        switch (gameMode) {
            case 0:
                setupMenu(x, y, width, height);
                return;
            case 1:
                setupDaClassic(width, height);
                return;
            case 2:
                setupDaGetFast(width, height);
                return;
            case 3:
                setupLeCrayCray(width, height);
                return;
            case 4:
                setupMOARFAIL(width, height);
                return;
            default:
                return;
        }
    }

    public void setupDaClassic(int width, int height) {
        this.PauseOnStart = false;
        this.PauseBar = false;
        this.scorebarFlashDur = 1000;
        this.applierFlashDur = 1000;
        this.BasePathType = 0;
        this.BackColor = Main.background;
        this.PathColor = Main.foreground;
        this.xPos = 0.0f;
        this.yPos = 0.0f;
        this.Width = (float) width;
        this.Height = (float) height;
        this.RelHeight = this.Height / this.Width;
        this.PathRadius = 0.1f;
        this.Collideable = true;
        this.MultBar = true;
        this.ApplierBar = true;
        this.ScoreBar = true;
        this.MultBarMax = 900.0f;
        this.DaFlip = true;
        this.DaFlipChance = 0.05f;
        this.DaFlipDuration = 5.0f;
        this.DaFlipTransTime = 0.25f;
        this.DaFlipMult = 2.0f;
        this.DaSupaSlow = true;
        this.DaSupaSlowChance = 0.05f;
        this.DaSupaSlowDuration = 2.1000001f;
        this.DaSupaSlowTransTime = /*TextTrackStyle.DEFAULT_FONT_SCALE*/1.0f;
        this.DaSupaSlowTimeMult = 0.3f;
        this.DaBomb = true;
        this.DaBombChance = 0.05f;
        this.DaBombMult = 2.0f;
        this.DaBombPathGens = 7;
        this.DaBombTimeMult = 0.2f;
        this.DaBombSlowTime = 0.15f;
        this.DaBombTransTime = 0.3f;
        this.DaMaths = true;
        this.DaMathsChance = 0.05f;
        this.DaMathsDuration = 7.0f;
        this.DaMathsMultBar = this.MultBarMax * 0.35f;
        this.DaMathsMultiplier = 2.0f;
        this.DaFattening = true;
        this.DaFatteningChance = 0.05f;
        this.DaFatteningDuration = 7.0f;
        this.DaFatteningTransTime = 0.25f;
        this.DaFatteningMult = 1.5f;
        this.PowerUps = true;
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.IconFillPaint = new Paint();
        this.IconFillPaint.setColor(Main.background);
        this.IconFillPaint.setAntiAlias(true);
        this.IconFillPaint.setStyle(Style.FILL);
        this.FusePaint = new Paint();
        this.FusePaint.setColor(Main.darkforeground);
        this.FusePaint.setAntiAlias(true);
        this.FusePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.FusePaint.setStyle(Style.STROKE);
        this.FusePaint.setStrokeCap(Cap.ROUND);
        this.ExplosionPaint = new Paint();
        this.ExplosionPaint.setAntiAlias(true);
        this.ExplosionPaint.setStyle(Style.FILL);
        this.ShockwavePaint = new Paint();
        this.ShockwavePaint.setColor(Main.foreground);
        this.ShockwavePaint.setAntiAlias(true);
        this.ShockwavePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.ShockwavePaint.setStyle(Style.STROKE);
        this.ShockwavePaint.setStrokeCap(Cap.ROUND);
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.InitialVelX = 0.0f;
        this.VelocityX = this.InitialVelX;
        this.InitialVelY = 2.5f;
        this.VelocityY = this.InitialVelY;
        this.AccelerationX = 0.0f;
        this.AccelerationY = 0.03f;
        this.TouchRadius = 0.06f;
        this.EpsilonRadius = (this.PathRadius + this.TouchRadius) + 0.01f;
        this.SqEpsilonRadius = this.EpsilonRadius * this.EpsilonRadius;
        this.AppBarMax = /*BitmapDescriptorFactory.HUE_CYAN*/ 1.0f;
        this.InitTimeMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitScoreMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitMultiplier = 5;
        this.MultiplierMax = 25;
        this.MultGrowthRate = 150.0f;
        this.MultDecayRate = 200.0f;
        this.AppGrowthRate = this.AppBarMax / 15.0f;
    }

    public void setupDaGetFast(int width, int height) {
        this.PauseOnStart = false;
        this.PauseBar = false;
        this.scorebarFlashDur = 1000;
        this.applierFlashDur = 1000;
        this.BasePathType = 0;
        this.BackColor = Main.background;
        this.PathColor = Main.foreground;
        this.xPos = 0.0f;
        this.yPos = 0.0f;
        this.Width = (float) width;
        this.Height = (float) height;
        this.RelHeight = this.Height / this.Width;
        this.PathRadius = 0.1f;
        this.Collideable = true;
        this.MultBar = true;
        this.ApplierBar = true;
        this.ScoreBar = true;
        this.MultBarMax = 900.0f;
        this.PowerUps = false;
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.InitialVelX = 0.0f;
        this.VelocityX = this.InitialVelX;
        this.InitialVelY = 2.5f;
        this.VelocityY = this.InitialVelY;
        this.AccelerationX = 0.0f;
        this.AccelerationY = 0.05f;
        this.TouchRadius = 0.06f;
        this.EpsilonRadius = (this.PathRadius + this.TouchRadius) + 0.01f;
        this.SqEpsilonRadius = this.EpsilonRadius * this.EpsilonRadius;
        this.AppBarMax = /*BitmapDescriptorFactory.HUE_CYAN*/ 1.0f;
        this.InitTimeMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitScoreMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitMultiplier = 5;
        this.MultiplierMax = 25;
        this.MultGrowthRate = 150.0f;
        this.MultDecayRate = 200.0f;
        this.AppGrowthRate = this.AppBarMax / 15.0f;
    }

    public void setupLeCrayCray(int width, int height) {
        this.PauseOnStart = false;
        this.PauseBar = false;
        this.applierFlashDur = 1000;
        this.scorebarFlashDur = 1000;
        this.BasePathType = 0;
        this.BackColor = Main.background;
        this.PathColor = Main.foreground;
        this.xPos = 0.0f;
        this.yPos = 0.0f;
        this.Width = (float) width;
        this.Height = (float) height;
        this.RelHeight = this.Height / this.Width;
        this.PathRadius = 0.1f;
        this.Collideable = true;
        this.MultBar = true;
        this.ApplierBar = true;
        this.ScoreBar = true;
        this.DaFattening = true;
        this.DaMaths = true;
        this.DaSupaSlow = true;
        this.DaBomb = true;
        this.DaFlip = true;
        this.DaFlipChance = 0.05f;
        this.DaFlipDuration = 5.0f;
        this.DaFlipTransTime = 0.5f;
        this.DaFlipMult = 2.0f;
        this.DaSupaSlowChance = 0.05f;
        this.DaSupaSlowDuration = 2.1000001f;
        this.DaSupaSlowTransTime = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.DaSupaSlowTimeMult = 0.3f;
        this.DaBombChance = 0.05f;
        this.DaBombMult = 2.0f;
        this.DaBombPathGens = 11;
        this.DaBombTimeMult = 0.2f;
        this.DaBombSlowTime = 0.15f;
        this.DaBombTransTime = 0.3f;
        this.DaMathsChance = 0.05f;
        this.DaMathsDuration = 7.0f;
        this.MultBarMax = 900.0f;
        this.DaMathsMultBar = this.MultBarMax * 0.35f;
        this.DaMathsMultiplier = 2.0f;
        this.DaFatteningChance = 0.05f;
        this.DaFatteningDuration = 7.0f;
        this.DaFatteningTransTime = 0.25f;
        this.DaFatteningMult = 1.5f;
        this.PowerUps = true;
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.IconFillPaint = new Paint();
        this.IconFillPaint.setColor(ViewCompat.MEASURED_STATE_MASK);
        this.IconFillPaint.setAntiAlias(true);
        this.IconFillPaint.setStyle(Style.FILL);
        this.FusePaint = new Paint();
        this.FusePaint.setColor(Main.darkforeground);
        this.FusePaint.setAntiAlias(true);
        this.FusePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.FusePaint.setStyle(Style.STROKE);
        this.FusePaint.setStrokeCap(Cap.ROUND);
        this.ExplosionPaint = new Paint();
        this.ExplosionPaint.setAntiAlias(true);
        this.ExplosionPaint.setStyle(Style.FILL);
        this.ShockwavePaint = new Paint();
        this.ShockwavePaint.setColor(Main.foreground);
        this.ShockwavePaint.setAntiAlias(true);
        this.ShockwavePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.ShockwavePaint.setStyle(Style.STROKE);
        this.ShockwavePaint.setStrokeCap(Cap.ROUND);
        this.InitialVelX = 0.0f;
        this.VelocityX = this.InitialVelX;
        this.InitialVelY = 4.25f;
        this.VelocityY = this.InitialVelY;
        this.AccelerationX = 0.0f;
        this.AccelerationY = 0.0f;
        this.TouchRadius = 0.06f;
        this.EpsilonRadius = (this.PathRadius + this.TouchRadius) + 0.01f;
        this.SqEpsilonRadius = this.EpsilonRadius * this.EpsilonRadius;
        this.AppBarMax = /*BitmapDescriptorFactory.HUE_CYAN*/ 1.0f;
        this.InitTimeMult = /*TextTrackStyle.DEFAULT_FONT_SCALE */ 1.0f;
        this.InitScoreMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitMultiplier = 5;
        this.MultiplierMax = 25;
        this.MultGrowthRate = 150.0f;
        this.MultDecayRate = 200.0f;
        this.AppGrowthRate = this.AppBarMax / 15.0f;
    }

    public void setupMenu(int x, int y, int width, int height) {
        this.BasePathType = 1;
        this.BackColor = Main.background;
        this.PathColor = Main.foreground;
        this.xPos = (float) x;
        this.yPos = (float) y;
        this.Width = (float) width;
        this.Height = (float) height;
        this.RelHeight = this.Height / this.Width;
        this.PathRadius = 0.1f;
        this.Collideable = false;
        this.MultBar = false;
        this.ApplierBar = false;
        this.PowerUps = false;
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.InitialVelX = 10.0f;
        this.VelocityX = this.InitialVelX;
        this.InitialVelY = 0.0f;
        this.VelocityY = this.InitialVelY;
        this.TouchRadius = 0.07f;
        this.EpsilonRadius = (this.PathRadius + this.TouchRadius) + 0.01f;
        this.SqEpsilonRadius = this.EpsilonRadius * this.EpsilonRadius;
        this.MultBarMax = 900.0f;
        this.AppBarMax = /*BitmapDescriptorFactory.HUE_CYAN*/ 1.0f;
        this.InitTimeMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.MultiplierMax = 10;
        this.MultGrowthRate = 100.0f;
        this.MultDecayRate = 200.0f;
        this.AppGrowthRate = 22.5f;
    }

    public void setupMOARFAIL(int width, int height) {
        this.PauseBar = true;
        this.Started = false;
        this.PauseOnStart = true;
        this.BasePathType = 0;
        this.BackColor = Main.background;
        this.PathColor = Main.foreground;
        this.xPos = 0.0f;
        this.yPos = 0.0f;
        this.Width = (float) width;
        this.Height = (float) height;
        this.RelHeight = this.Height / this.Width;
        this.PathRadius = 0.1f;
        this.Collideable = true;
        this.MultBar = false;
        this.ApplierBar = false;
        this.ScoreBar = true;
        this.DaFlip = false;
        this.DaFattening = true;
        this.DaMaths = false;
        this.DaSupaSlow = true;
        this.DaSupaSlowChance = 0.025f;
        this.DaSupaSlowDuration = 2.1000001f;
        this.DaSupaSlowTransTime = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.DaSupaSlowTimeMult = 0.3f;
        this.MultBarMax = 900.0f;
        this.DaFatteningChance = 0.025f;
        this.DaFatteningDuration = 7.0f;
        this.DaFatteningTransTime = 0.25f;
        this.DaFatteningMult = 1.5f;
        this.PowerUps = true;
        this.LiftFail = true;
        this.PathPaint = new Paint();
        this.PathPaint.setStrokeCap(Cap.ROUND);
        this.PathPaint.setAntiAlias(true);
        this.PathPaint.setColor(this.PathColor);
        this.PathPaint.setStrokeWidth((this.PathRadius * 2.0f) * ((float) width));
        this.PathPaint.setStyle(Style.STROKE);
        this.IconFillPaint = new Paint();
        this.IconFillPaint.setColor(ViewCompat.MEASURED_STATE_MASK);
        this.IconFillPaint.setAntiAlias(true);
        this.IconFillPaint.setStyle(Style.FILL);
        this.FusePaint = new Paint();
        this.FusePaint.setColor(Main.darkforeground);
        this.FusePaint.setAntiAlias(true);
        this.FusePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.FusePaint.setStyle(Style.STROKE);
        this.FusePaint.setStrokeCap(Cap.ROUND);
        this.ExplosionPaint = new Paint();
        this.ExplosionPaint.setAntiAlias(true);
        this.ExplosionPaint.setStyle(Style.FILL);
        this.ShockwavePaint = new Paint();
        this.ShockwavePaint.setColor(Main.foreground);
        this.ShockwavePaint.setAntiAlias(true);
        this.ShockwavePaint.setStrokeWidth((this.PathRadius * 0.5f) * this.Width);
        this.ShockwavePaint.setStyle(Style.STROKE);
        this.ShockwavePaint.setStrokeCap(Cap.ROUND);
        this.InitialVelX = 0.0f;
        this.VelocityX = this.InitialVelX;
        this.InitialVelY = 4.1f;
        this.VelocityY = this.InitialVelY;
        this.AccelerationX = 0.0f;
        this.AccelerationY = 0.0f;
        this.TouchRadius = 0.06f;
        this.EpsilonRadius = (this.PathRadius + this.TouchRadius) + 0.01f;
        this.SqEpsilonRadius = this.EpsilonRadius * this.EpsilonRadius;
        this.AppBarMax = /*BitmapDescriptorFactory.HUE_CYAN*/ 1.0f;
        this.InitTimeMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitScoreMult = /*TextTrackStyle.DEFAULT_FONT_SCALE*/ 1.0f;
        this.InitMultiplier = 5;
        this.MultiplierMax = 25;
        this.MultGrowthRate = 100.0f;
        this.MultDecayRate = 200.0f;
        this.AppGrowthRate = this.AppBarMax / 15.0f;
    }
}
